Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> for
Rule 1     for -> atom
Rule 2     for -> NEG LP for RP
Rule 3     for -> AND LP for COMMA for RP
Rule 4     for -> SOME LP VAR COMMA for RP
Rule 5     for -> OR LP for COMMA for RP
Rule 6     for -> IMP LP for COMMA for RP
Rule 7     for -> ALL LP VAR COMMA for RP
Rule 8     atom -> PRED LP VAR RP
Rule 9     atom -> PRED LP VAR COMMA VAR RP
Rule 10    atom -> EQ LP VAR COMMA VAR RP
Rule 11    atom -> CARD LP VAR COMMA VAR RP

Terminals, with rules where they appear

ALL                  : 7
AND                  : 3
CARD                 : 11
COMMA                : 3 4 5 6 7 9 10 11
EQ                   : 10
IMP                  : 6
LP                   : 2 3 4 5 6 7 8 9 10 11
NEG                  : 2
OR                   : 5
PRED                 : 8 9
RP                   : 2 3 4 5 6 7 8 9 10 11
SOME                 : 4
VAR                  : 4 7 8 9 9 10 10 11 11
error                : 

Nonterminals, with rules where they appear

atom                 : 1
for                  : 2 3 3 4 5 5 6 6 7 0

Parsing method: LALR

state 0

    (0) S' -> . for
    (1) for -> . atom
    (2) for -> . NEG LP for RP
    (3) for -> . AND LP for COMMA for RP
    (4) for -> . SOME LP VAR COMMA for RP
    (5) for -> . OR LP for COMMA for RP
    (6) for -> . IMP LP for COMMA for RP
    (7) for -> . ALL LP VAR COMMA for RP
    (8) atom -> . PRED LP VAR RP
    (9) atom -> . PRED LP VAR COMMA VAR RP
    (10) atom -> . EQ LP VAR COMMA VAR RP
    (11) atom -> . CARD LP VAR COMMA VAR RP

    NEG             shift and go to state 4
    AND             shift and go to state 1
    SOME            shift and go to state 5
    OR              shift and go to state 9
    IMP             shift and go to state 6
    ALL             shift and go to state 2
    PRED            shift and go to state 11
    EQ              shift and go to state 8
    CARD            shift and go to state 10

    for                            shift and go to state 3
    atom                           shift and go to state 7

state 1

    (3) for -> AND . LP for COMMA for RP

    LP              shift and go to state 12


state 2

    (7) for -> ALL . LP VAR COMMA for RP

    LP              shift and go to state 13


state 3

    (0) S' -> for .



state 4

    (2) for -> NEG . LP for RP

    LP              shift and go to state 14


state 5

    (4) for -> SOME . LP VAR COMMA for RP

    LP              shift and go to state 15


state 6

    (6) for -> IMP . LP for COMMA for RP

    LP              shift and go to state 16


state 7

    (1) for -> atom .

    COMMA           reduce using rule 1 (for -> atom .)
    RP              reduce using rule 1 (for -> atom .)
    $end            reduce using rule 1 (for -> atom .)


state 8

    (10) atom -> EQ . LP VAR COMMA VAR RP

    LP              shift and go to state 17


state 9

    (5) for -> OR . LP for COMMA for RP

    LP              shift and go to state 18


state 10

    (11) atom -> CARD . LP VAR COMMA VAR RP

    LP              shift and go to state 19


state 11

    (8) atom -> PRED . LP VAR RP
    (9) atom -> PRED . LP VAR COMMA VAR RP

    LP              shift and go to state 20


state 12

    (3) for -> AND LP . for COMMA for RP
    (1) for -> . atom
    (2) for -> . NEG LP for RP
    (3) for -> . AND LP for COMMA for RP
    (4) for -> . SOME LP VAR COMMA for RP
    (5) for -> . OR LP for COMMA for RP
    (6) for -> . IMP LP for COMMA for RP
    (7) for -> . ALL LP VAR COMMA for RP
    (8) atom -> . PRED LP VAR RP
    (9) atom -> . PRED LP VAR COMMA VAR RP
    (10) atom -> . EQ LP VAR COMMA VAR RP
    (11) atom -> . CARD LP VAR COMMA VAR RP

    NEG             shift and go to state 4
    AND             shift and go to state 1
    SOME            shift and go to state 5
    OR              shift and go to state 9
    IMP             shift and go to state 6
    ALL             shift and go to state 2
    PRED            shift and go to state 11
    EQ              shift and go to state 8
    CARD            shift and go to state 10

    for                            shift and go to state 21
    atom                           shift and go to state 7

state 13

    (7) for -> ALL LP . VAR COMMA for RP

    VAR             shift and go to state 22


state 14

    (2) for -> NEG LP . for RP
    (1) for -> . atom
    (2) for -> . NEG LP for RP
    (3) for -> . AND LP for COMMA for RP
    (4) for -> . SOME LP VAR COMMA for RP
    (5) for -> . OR LP for COMMA for RP
    (6) for -> . IMP LP for COMMA for RP
    (7) for -> . ALL LP VAR COMMA for RP
    (8) atom -> . PRED LP VAR RP
    (9) atom -> . PRED LP VAR COMMA VAR RP
    (10) atom -> . EQ LP VAR COMMA VAR RP
    (11) atom -> . CARD LP VAR COMMA VAR RP

    NEG             shift and go to state 4
    AND             shift and go to state 1
    SOME            shift and go to state 5
    OR              shift and go to state 9
    IMP             shift and go to state 6
    ALL             shift and go to state 2
    PRED            shift and go to state 11
    EQ              shift and go to state 8
    CARD            shift and go to state 10

    for                            shift and go to state 23
    atom                           shift and go to state 7

state 15

    (4) for -> SOME LP . VAR COMMA for RP

    VAR             shift and go to state 24


state 16

    (6) for -> IMP LP . for COMMA for RP
    (1) for -> . atom
    (2) for -> . NEG LP for RP
    (3) for -> . AND LP for COMMA for RP
    (4) for -> . SOME LP VAR COMMA for RP
    (5) for -> . OR LP for COMMA for RP
    (6) for -> . IMP LP for COMMA for RP
    (7) for -> . ALL LP VAR COMMA for RP
    (8) atom -> . PRED LP VAR RP
    (9) atom -> . PRED LP VAR COMMA VAR RP
    (10) atom -> . EQ LP VAR COMMA VAR RP
    (11) atom -> . CARD LP VAR COMMA VAR RP

    NEG             shift and go to state 4
    AND             shift and go to state 1
    SOME            shift and go to state 5
    OR              shift and go to state 9
    IMP             shift and go to state 6
    ALL             shift and go to state 2
    PRED            shift and go to state 11
    EQ              shift and go to state 8
    CARD            shift and go to state 10

    for                            shift and go to state 25
    atom                           shift and go to state 7

state 17

    (10) atom -> EQ LP . VAR COMMA VAR RP

    VAR             shift and go to state 26


state 18

    (5) for -> OR LP . for COMMA for RP
    (1) for -> . atom
    (2) for -> . NEG LP for RP
    (3) for -> . AND LP for COMMA for RP
    (4) for -> . SOME LP VAR COMMA for RP
    (5) for -> . OR LP for COMMA for RP
    (6) for -> . IMP LP for COMMA for RP
    (7) for -> . ALL LP VAR COMMA for RP
    (8) atom -> . PRED LP VAR RP
    (9) atom -> . PRED LP VAR COMMA VAR RP
    (10) atom -> . EQ LP VAR COMMA VAR RP
    (11) atom -> . CARD LP VAR COMMA VAR RP

    NEG             shift and go to state 4
    AND             shift and go to state 1
    SOME            shift and go to state 5
    OR              shift and go to state 9
    IMP             shift and go to state 6
    ALL             shift and go to state 2
    PRED            shift and go to state 11
    EQ              shift and go to state 8
    CARD            shift and go to state 10

    for                            shift and go to state 27
    atom                           shift and go to state 7

state 19

    (11) atom -> CARD LP . VAR COMMA VAR RP

    VAR             shift and go to state 28


state 20

    (8) atom -> PRED LP . VAR RP
    (9) atom -> PRED LP . VAR COMMA VAR RP

    VAR             shift and go to state 29


state 21

    (3) for -> AND LP for . COMMA for RP

    COMMA           shift and go to state 30


state 22

    (7) for -> ALL LP VAR . COMMA for RP

    COMMA           shift and go to state 31


state 23

    (2) for -> NEG LP for . RP

    RP              shift and go to state 32


state 24

    (4) for -> SOME LP VAR . COMMA for RP

    COMMA           shift and go to state 33


state 25

    (6) for -> IMP LP for . COMMA for RP

    COMMA           shift and go to state 34


state 26

    (10) atom -> EQ LP VAR . COMMA VAR RP

    COMMA           shift and go to state 35


state 27

    (5) for -> OR LP for . COMMA for RP

    COMMA           shift and go to state 36


state 28

    (11) atom -> CARD LP VAR . COMMA VAR RP

    COMMA           shift and go to state 37


state 29

    (8) atom -> PRED LP VAR . RP
    (9) atom -> PRED LP VAR . COMMA VAR RP

    RP              shift and go to state 39
    COMMA           shift and go to state 38


state 30

    (3) for -> AND LP for COMMA . for RP
    (1) for -> . atom
    (2) for -> . NEG LP for RP
    (3) for -> . AND LP for COMMA for RP
    (4) for -> . SOME LP VAR COMMA for RP
    (5) for -> . OR LP for COMMA for RP
    (6) for -> . IMP LP for COMMA for RP
    (7) for -> . ALL LP VAR COMMA for RP
    (8) atom -> . PRED LP VAR RP
    (9) atom -> . PRED LP VAR COMMA VAR RP
    (10) atom -> . EQ LP VAR COMMA VAR RP
    (11) atom -> . CARD LP VAR COMMA VAR RP

    NEG             shift and go to state 4
    AND             shift and go to state 1
    SOME            shift and go to state 5
    OR              shift and go to state 9
    IMP             shift and go to state 6
    ALL             shift and go to state 2
    PRED            shift and go to state 11
    EQ              shift and go to state 8
    CARD            shift and go to state 10

    for                            shift and go to state 40
    atom                           shift and go to state 7

state 31

    (7) for -> ALL LP VAR COMMA . for RP
    (1) for -> . atom
    (2) for -> . NEG LP for RP
    (3) for -> . AND LP for COMMA for RP
    (4) for -> . SOME LP VAR COMMA for RP
    (5) for -> . OR LP for COMMA for RP
    (6) for -> . IMP LP for COMMA for RP
    (7) for -> . ALL LP VAR COMMA for RP
    (8) atom -> . PRED LP VAR RP
    (9) atom -> . PRED LP VAR COMMA VAR RP
    (10) atom -> . EQ LP VAR COMMA VAR RP
    (11) atom -> . CARD LP VAR COMMA VAR RP

    NEG             shift and go to state 4
    AND             shift and go to state 1
    SOME            shift and go to state 5
    OR              shift and go to state 9
    IMP             shift and go to state 6
    ALL             shift and go to state 2
    PRED            shift and go to state 11
    EQ              shift and go to state 8
    CARD            shift and go to state 10

    for                            shift and go to state 41
    atom                           shift and go to state 7

state 32

    (2) for -> NEG LP for RP .

    COMMA           reduce using rule 2 (for -> NEG LP for RP .)
    RP              reduce using rule 2 (for -> NEG LP for RP .)
    $end            reduce using rule 2 (for -> NEG LP for RP .)


state 33

    (4) for -> SOME LP VAR COMMA . for RP
    (1) for -> . atom
    (2) for -> . NEG LP for RP
    (3) for -> . AND LP for COMMA for RP
    (4) for -> . SOME LP VAR COMMA for RP
    (5) for -> . OR LP for COMMA for RP
    (6) for -> . IMP LP for COMMA for RP
    (7) for -> . ALL LP VAR COMMA for RP
    (8) atom -> . PRED LP VAR RP
    (9) atom -> . PRED LP VAR COMMA VAR RP
    (10) atom -> . EQ LP VAR COMMA VAR RP
    (11) atom -> . CARD LP VAR COMMA VAR RP

    NEG             shift and go to state 4
    AND             shift and go to state 1
    SOME            shift and go to state 5
    OR              shift and go to state 9
    IMP             shift and go to state 6
    ALL             shift and go to state 2
    PRED            shift and go to state 11
    EQ              shift and go to state 8
    CARD            shift and go to state 10

    for                            shift and go to state 42
    atom                           shift and go to state 7

state 34

    (6) for -> IMP LP for COMMA . for RP
    (1) for -> . atom
    (2) for -> . NEG LP for RP
    (3) for -> . AND LP for COMMA for RP
    (4) for -> . SOME LP VAR COMMA for RP
    (5) for -> . OR LP for COMMA for RP
    (6) for -> . IMP LP for COMMA for RP
    (7) for -> . ALL LP VAR COMMA for RP
    (8) atom -> . PRED LP VAR RP
    (9) atom -> . PRED LP VAR COMMA VAR RP
    (10) atom -> . EQ LP VAR COMMA VAR RP
    (11) atom -> . CARD LP VAR COMMA VAR RP

    NEG             shift and go to state 4
    AND             shift and go to state 1
    SOME            shift and go to state 5
    OR              shift and go to state 9
    IMP             shift and go to state 6
    ALL             shift and go to state 2
    PRED            shift and go to state 11
    EQ              shift and go to state 8
    CARD            shift and go to state 10

    for                            shift and go to state 43
    atom                           shift and go to state 7

state 35

    (10) atom -> EQ LP VAR COMMA . VAR RP

    VAR             shift and go to state 44


state 36

    (5) for -> OR LP for COMMA . for RP
    (1) for -> . atom
    (2) for -> . NEG LP for RP
    (3) for -> . AND LP for COMMA for RP
    (4) for -> . SOME LP VAR COMMA for RP
    (5) for -> . OR LP for COMMA for RP
    (6) for -> . IMP LP for COMMA for RP
    (7) for -> . ALL LP VAR COMMA for RP
    (8) atom -> . PRED LP VAR RP
    (9) atom -> . PRED LP VAR COMMA VAR RP
    (10) atom -> . EQ LP VAR COMMA VAR RP
    (11) atom -> . CARD LP VAR COMMA VAR RP

    NEG             shift and go to state 4
    AND             shift and go to state 1
    SOME            shift and go to state 5
    OR              shift and go to state 9
    IMP             shift and go to state 6
    ALL             shift and go to state 2
    PRED            shift and go to state 11
    EQ              shift and go to state 8
    CARD            shift and go to state 10

    for                            shift and go to state 45
    atom                           shift and go to state 7

state 37

    (11) atom -> CARD LP VAR COMMA . VAR RP

    VAR             shift and go to state 46


state 38

    (9) atom -> PRED LP VAR COMMA . VAR RP

    VAR             shift and go to state 47


state 39

    (8) atom -> PRED LP VAR RP .

    COMMA           reduce using rule 8 (atom -> PRED LP VAR RP .)
    RP              reduce using rule 8 (atom -> PRED LP VAR RP .)
    $end            reduce using rule 8 (atom -> PRED LP VAR RP .)


state 40

    (3) for -> AND LP for COMMA for . RP

    RP              shift and go to state 48


state 41

    (7) for -> ALL LP VAR COMMA for . RP

    RP              shift and go to state 49


state 42

    (4) for -> SOME LP VAR COMMA for . RP

    RP              shift and go to state 50


state 43

    (6) for -> IMP LP for COMMA for . RP

    RP              shift and go to state 51


state 44

    (10) atom -> EQ LP VAR COMMA VAR . RP

    RP              shift and go to state 52


state 45

    (5) for -> OR LP for COMMA for . RP

    RP              shift and go to state 53


state 46

    (11) atom -> CARD LP VAR COMMA VAR . RP

    RP              shift and go to state 54


state 47

    (9) atom -> PRED LP VAR COMMA VAR . RP

    RP              shift and go to state 55


state 48

    (3) for -> AND LP for COMMA for RP .

    COMMA           reduce using rule 3 (for -> AND LP for COMMA for RP .)
    RP              reduce using rule 3 (for -> AND LP for COMMA for RP .)
    $end            reduce using rule 3 (for -> AND LP for COMMA for RP .)


state 49

    (7) for -> ALL LP VAR COMMA for RP .

    COMMA           reduce using rule 7 (for -> ALL LP VAR COMMA for RP .)
    RP              reduce using rule 7 (for -> ALL LP VAR COMMA for RP .)
    $end            reduce using rule 7 (for -> ALL LP VAR COMMA for RP .)


state 50

    (4) for -> SOME LP VAR COMMA for RP .

    COMMA           reduce using rule 4 (for -> SOME LP VAR COMMA for RP .)
    RP              reduce using rule 4 (for -> SOME LP VAR COMMA for RP .)
    $end            reduce using rule 4 (for -> SOME LP VAR COMMA for RP .)


state 51

    (6) for -> IMP LP for COMMA for RP .

    COMMA           reduce using rule 6 (for -> IMP LP for COMMA for RP .)
    RP              reduce using rule 6 (for -> IMP LP for COMMA for RP .)
    $end            reduce using rule 6 (for -> IMP LP for COMMA for RP .)


state 52

    (10) atom -> EQ LP VAR COMMA VAR RP .

    COMMA           reduce using rule 10 (atom -> EQ LP VAR COMMA VAR RP .)
    RP              reduce using rule 10 (atom -> EQ LP VAR COMMA VAR RP .)
    $end            reduce using rule 10 (atom -> EQ LP VAR COMMA VAR RP .)


state 53

    (5) for -> OR LP for COMMA for RP .

    COMMA           reduce using rule 5 (for -> OR LP for COMMA for RP .)
    RP              reduce using rule 5 (for -> OR LP for COMMA for RP .)
    $end            reduce using rule 5 (for -> OR LP for COMMA for RP .)


state 54

    (11) atom -> CARD LP VAR COMMA VAR RP .

    COMMA           reduce using rule 11 (atom -> CARD LP VAR COMMA VAR RP .)
    RP              reduce using rule 11 (atom -> CARD LP VAR COMMA VAR RP .)
    $end            reduce using rule 11 (atom -> CARD LP VAR COMMA VAR RP .)


state 55

    (9) atom -> PRED LP VAR COMMA VAR RP .

    COMMA           reduce using rule 9 (atom -> PRED LP VAR COMMA VAR RP .)
    RP              reduce using rule 9 (atom -> PRED LP VAR COMMA VAR RP .)
    $end            reduce using rule 9 (atom -> PRED LP VAR COMMA VAR RP .)

